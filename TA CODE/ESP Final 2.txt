#include <SoftwareSerial.h>
#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
SoftwareSerial DataSerial(16, 17);
unsigned long prevMillis = 0;
const long interval = 3000;
String arrData[2];
float literCounter = 0.0;
const float literThreshold = 1.0; // Batas keluaran satu liter
const long timer = 60000; // 1 menit
unsigned long menitan = 0;
int model = 0;

const char* ssid = "A5 2017";
const char* password = "bimabima7";
const char* serverUrl = "https://smartwatermeter.my.id";
const char* apiKey = "$2y$10$eB5lihMSLGA3Wg/FMxtvzOjLVLhOYDh8k6sNnVoiFuQ2pj5wFNfaq";

void setup() {
  Serial.begin(9600);
  DataSerial.begin(9600);

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }

  Serial.println("Connected to WiFi");
}

void loop() {
  unsigned long currMillis = millis();
  if (currMillis - prevMillis >= interval) {
    prevMillis = currMillis;
    String dataa = "";
    while (DataSerial.available() > 0) {
      dataa += char(DataSerial.read());
    }
    dataa.trim();
    if (dataa != "") {
      int index = 0;
      for (int i = 0; i <= dataa.length(); i++) {
        char pemisah = '#';
        if (dataa[i] != pemisah)
          arrData[index] += dataa[i];
        else
          index++;
      }
      if (index == 1) {
        Serial.println(arrData[0]);
        Serial.println(arrData[1]);
        float keluaran = arrData[0].toFloat();
        literCounter += keluaran;

        if (menitan == 0) {
          menitan = millis() + timer;
        }

        if (literCounter > 0 && millis() >= menitan) {
          if (literCounter < literThreshold) {
            Serial.println("Saluran Normal");
          } else {
            Serial.println("Potensi Kebocoran Terdeteksi");

            // Kirim HTTP request ke server API
            sendHttpRequest();
          }
          literCounter = 0.0;
          menitan = 0;
        }
      }
      arrData[0] = "";
      arrData[1] = "";
    }
    DataSerial.println("ya");
  }
}

void sendHttpRequest() {
  WiFiClient client;
  HTTPClient http;

  String url = serverUrl + "/api/log_pemakaian"; // Ganti dengan endpoint yang sesuai di server Anda

  // Mengatur header untuk autentikasi API key
  http.begin(client, url);
  http.addHeader("Authorization", "Bearer " + String(apiKey));

  // Mengirimkan permintaan POST kosong
  int httpCode = http.POST("");
  if (httpCode > 0) {
    String response = http.getString();
    Serial.println("HTTP Response: " + response);
  } else {
    Serial.println("HTTP Request failed");
  }

  http.end();
}